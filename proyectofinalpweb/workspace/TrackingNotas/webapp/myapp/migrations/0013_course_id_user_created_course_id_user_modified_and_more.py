# Generated by Django 5.0.6 on 2024-06-12 01:41

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('myapp', '0012_section_created_section_modified_event'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='course',
            name='id_user_created',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='course',
            name='id_user_modified',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_modified', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Grades',
            fields=[
                ('idGrades', models.AutoField(primary_key=True, serialize=False)),
                ('progress', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('exam', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('average', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('idEvent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.event')),
                ('idRegistration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.registration')),
            ],
        ),
        migrations.AddConstraint(
            model_name='grades',
            constraint=models.CheckConstraint(check=models.Q(('progress__gte', 0), ('progress__lte', 20)), name='progress_range'),
        ),
        migrations.AddConstraint(
            model_name='grades',
            constraint=models.CheckConstraint(check=models.Q(('exam__gte', 0), ('exam__lte', 20)), name='exam_range'),
        ),
        migrations.AddConstraint(
            model_name='grades',
            constraint=models.CheckConstraint(check=models.Q(('average__gte', 0), ('average__lte', 20)), name='average_range'),
        ),
    ]
